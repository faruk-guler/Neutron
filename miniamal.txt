import yaml, paramiko

def load_yaml(path):
    with open(path) as f: return yaml.safe_load(f)

def run_ssh(host, port, user, password, cmd):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        ssh.connect(host, port, user, password, timeout=15)
        _, stdout, stderr = ssh.exec_command(cmd)
        out = stdout.read().decode().strip()
        err = stderr.read().decode().strip()
        ssh.close()
        return out or err or "(çıktı yok)"
    except paramiko.AuthenticationException:
        return "şifre hatası"
    except:
        return "bağlantı hatası"

config = load_yaml('config.yaml')['ssh']
sources = load_yaml('sources.yaml')['sources']

while True:
    cmd = input("shell # ")
    if cmd.lower() == "exit": break
    if not cmd: continue
    for s in sources:
        host = s['host'] if isinstance(s, dict) else s
        port = s.get('port', config['port']) if isinstance(s, dict) else config['port']
        print(f"{host}:{port} > {run_ssh(host, port, config['user'], config['password'], cmd)}")
    print("-" * 30)
